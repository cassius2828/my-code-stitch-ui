@use "../abstracts/" as *;

/*-- -------------------------- -->
<---         Donations          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #donations-1428 {
    padding: var(--sectionPadding);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: calc(40 / 16 * 1rem);
    position: relative;
    z-index: 1;

    .cs-container {
      width: 100%;
      /* changes to 1280px at tablet */
      max-width: calc(550 / 16 * 1rem);
      margin: auto;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 48px - 64px */
      gap: clamp(3rem, 6vw, 4rem);
      position: relative;
      z-index: 10;
    }

    .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: center;
      width: 100%;
      max-width: calc(522 / 16 * 1rem);
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: center;
      padding-top: 2rem;
      color: white;
    }

    .cs-topper {
      color: var(--secondary);
    }

    .cs-title {
      color: var(--bodyTextColorWhite);
    }

    .cs-text {
      margin-bottom: calc(16 / 16 * 1rem);
      color: var(--bodyTextColorWhite);
      opacity: 0.8;
      &:last-of-type {
        margin-bottom: calc(32 / 16 * 1rem);
      }
    }

    .cs-button-solid {
      font-size: calc(16 / 16 * 1rem);
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-decoration: none;
      font-weight: 700;
      text-align: center;
      margin: 0;
      color: #fff;
      min-width: calc(150 / 16 * 1rem);
      padding: 0 calc(32 / 16 * 1rem);
      background-color: var(--primary);
      border-radius: calc(8 / 16 * 1rem);
      overflow: hidden;
      display: inline-block;
      position: relative;
      z-index: 1;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
      transition: color 0.3s;

      &:before {
        content: "";
        position: absolute;
        height: 100%;
        width: 0%;
        background: #fff;
        opacity: 1;
        top: 0;
        left: 0;
        z-index: -1;
        border-radius: calc(8 / 16 * 1rem);
        transition: width 0.3s;
      }

      &:hover {
        color: var(--primary);
        &:before {
          width: 100%;
        }
      }
    }

    .cs-card-group {
      width: 100%;
      /* changes to 630px at large desktop */
      max-width: calc(944 / 16 * 1rem);
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      gap: calc(20 / 16 * 1rem);
    }

    .cs-item {
      text-align: left;
      list-style: none;
      border-radius: calc(16 / 16 * 1rem);
      overflow: hidden;
      background-color: #fff;
      box-shadow: 0px 4px 120px 0px rgba(0, 0, 0, 0.12);
      grid-column: span 12;
      position: relative;
      z-index: 1;
      transition: box-shadow 0.3s, transform 0.3s;
      margin-top: 2rem;

      &:hover {
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        .cs-picture {
          img {
            opacity: 0.3;
            transform: scale(1.1);
          }
        }

        .cs-h3 {
          color: var(--primary);
        }
      }
    }

    .cs-link {
      text-decoration: none;
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      position: relative;
    }

    .cs-picture {
      width: 100%;
      height: calc(240 / 16 * 1rem);
      background-color: var(--primary);
      overflow: hidden;
      display: block;
      position: relative;
      z-index: 1;

      img {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        object-fit: cover;
        transition: transform 0.6s, opacity 0.3s;
      }
    }

    .cs-flex {
      padding: calc(24 / 16 * 1rem);
      /* prblog padding from affecting height and width */
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      position: relative;
      z-index: 2;
    }

    .cs-h3 {
      font-size: calc(20 / 16 * 1rem);
      text-align: inherit;
      line-height: 1.2em;
      font-weight: 700;
      color: var(--headerColor);
      margin: 0 0 calc(12 / 16 * 1rem) 0;
      transition: color 0.3s;
    }

    .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      text-align: inherit;
      margin: 0 0 calc(24 / 16 * 1rem);
      padding: 0 0 calc(24 / 16 * 1rem);
      color: var(--bodyTextColor);
      border-bottom: 1px solid #e8e8e8;
    }

    .cs-donations-flex {
      width: 100%;
      margin: 0 0 calc(8 / 16 * 1rem);
    }

    .cs-bar {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      /* 4px - 8px */
      gap: clamp(0.25rem, 1vw, 0.5rem);
    }

    .cs-progress {
      width: 100%;
      height: 6px;
      border-radius: calc(8 / 16 * 1rem);
      overflow: hidden;
      background-color: #e8e8e8;
    }

    .cs-progress-bar {
      width: var(--progress);
      height: 100%;
      background-color: var(--secondary);
      border-radius: calc(8 / 16 * 1rem);
      display: block;
    }

    .cs-percentage {
      font-size: calc(14 / 16 * 1rem);
      line-height: 1.2em;
      font-weight: 700;
      margin: 0;
      color: var(--headerColor);
      display: block;
    }

    .cs-number-group {
      width: 100%;
      margin: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: calc(24 / 16 * 1rem);
    }

    .cs-raised {
      display: flex;
      justify-content: center;
      align-items: flex-end;
      gap: calc(4 / 16 * 1rem);
    }

    .cs-number {
      font-size: calc(14 / 16 * 1rem);
      line-height: 1.2em;
      margin: 0;
      color: var(--bodyTextColor);
      display: block;
    }

    .cs-stats-container {
      width: 100%;
      /* changes to 1280px at large desktop */
      max-width: calc(944 / 16 * 1rem);
      position: relative;
      z-index: 1;
    }

    .cs-stats-group {
      width: 100%;
      max-width: calc(944 / 16 * 1rem);
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      /* 16px - 20px */
      gap: clamp(1rem, 4vw, 4rem);
    }

    .cs-stat {
      list-style: none;
      width: 100%;
      max-width: calc(400 / 16 * 1rem);
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      /* 16px - 20xp */
      gap: clamp(1rem, 2vw, 1.25rem);
      grid-column: span 6;
    }

    .cs-info {
      text-align: center;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: calc(8 / 16 * 1rem);
    }

    .cs-icon-wrapper {
      /* 60px - 88px */
      width: clamp(3.75rem, 7vw, 5.5rem);
      height: clamp(3.75rem, 7vw, 5.5rem);
      border-radius: 50%;
      overflow: hidden;
      display: flex;
      justify-content: center;
      align-items: center;
      /* prevents flexbox from squishing it */
      flex: none;
      position: relative;
      z-index: 1;

      &:before {
        /* background color */
        content: "";
        width: 100%;
        height: 100%;
        background: var(--secondary);
        opacity: 0.1;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
      }
    }

    .cs-icon {
      /* 32px - 48px */
      width: clamp(2rem, 4vw, 3rem);
      height: auto;
      display: block;
    }

    .cs-stat-number {
      /* 25px - 39px */
      font-size: clamp(1.5625rem, 3vw, 2.4375rem);
      text-align: inherit;
      line-height: 1.2em;
      font-weight: 900;
      margin: 0;
      color: var(--headerColor);
    }

    .cs-desc {
      /* 14px - 16px */
      font-size: clamp(0.875em, 3vw, 1rem);
      text-align: inherit;
      line-height: 1.5em;
      margin: 0;
      color: var(--bodyTextColor);
    }

    .cs-background {
      width: 100%;
      /* 100% at large desktop */
      height: 70%;
      /* removed at large desktop */
      max-height: calc(650 / 16 * 1rem);
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;

      &:before {
        content: "";
        width: 100%;
        height: 100%;
        background-color: #1a1a1a;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
      }

      img {
        width: 100%;
        height: 100%;
        opacity: 0.02;
        object-fit: cover;
        top: 0;
        left: 0;
      }
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #donations-1428 {
    .cs-container {
      max-width: calc(1280 / 16 * 1rem);
    }

    .cs-item {
      grid-column: span 6;
    }

    .cs-stat {
      flex-direction: row;
      align-items: flex-start;
    }

    .cs-info {
      text-align: left;
      align-items: flex-start;
    }
  }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
  #donations-1428 {
    .cs-container {
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-start;
    }

    .cs-content {
      text-align: left;
      /* this padding will push down and maintain the same distance between the bottom of the group and the top of the cs-stats-container.  That way when you add or subtract content from this group it will always be the right distance from the stat container below it */
      padding-bottom: calc(250 / 16 * 1rem);
      align-items: flex-start;
    }

    .cs-card-group {
      /* same amount as the translateY value to offset it */
      margin-bottom: calc(100 / 16 * 1rem);
      /* sends it to the left in the 1st position */
      order: -1;
      align-self: center;
    }

    .cs-item {
      &:nth-of-type(2) {
        transform: translateY(6.25rem);
      }
    }

    .cs-card-group {
      max-width: calc(630 / 16 * 1rem);
    }

    .cs-stats-container {
      max-width: calc(1280 / 16 * 1rem);
      /* makes it overlap the cs-container so the cards are next to it on the left */
      margin-top: calc(-150 / 16 * 1rem);
      display: flex;
      justify-content: flex-end;

      &:before {
        /* white background on the stats */
        /* we add this to be the background so as the height of the cs-content changes, this white background area will ALWAYS have 36 pixels between the top of it and the stats content below it.  This is an "illusion" we use to create the LOOK of it being the section background so we have mroe control over the white space above the stats group. */
        content: "";
        width: 105vw;
        height: calc(1000 / 16 * 1rem);
        background: #fff;
        opacity: 1;
        position: absolute;
        display: block;
        top: calc(-36 / 16 * 1rem);
        left: 50%;
        transform: translateX(-50%);
        z-index: -1;
      }
    }

    .cs-stats-group {
      max-width: calc(585 / 16 * 1rem);
      justify-content: flex-end;
    }

    .cs-background {
      height: 100%;
      max-height: 100%;
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode {
    #donations-1428 {
      .cs-topper {
        color: var(--secondary);
      }

      .cs-title,
      .cs-text,
      .cs-h3,
      .cs-link,
      .cs-item-text,
      .cs-number,
      .cs-desc,
      .cs-percentage {
        color: var(--bodyTextColorWhite);
      }

      .cs-link {
        &:hover {
          color: var(--secondary);
        }
      }

      .cs-text,
      .cs-item-text,
      .cs-desc {
        opacity: 0.8;
      }

      .cs-item {
        background-color: var(--medium);
        border-color: rgba(255, 255, 255, 0.2);
        &:before {
          opacity: 0.3;
        }
      }

      .cs-item-text {
        border-color: rgba(255, 255, 255, 0.2);
      }

      .cs-picture {
        &:before {
          background-color: #fff;
        }
      }

      .cs-progress {
        background-color: rgba(255, 255, 255, 0.2);
      }

      .cs-background {
        &:before {
          background-color: rgba(0, 0, 0, 0.6);
        }
      }

      .cs-stats-container {
        &:before {
          background-color: var(--dark);
        }
      }

      .cs-stat-number,
      .cs-desc {
        color: var(--bodyTextColorWhite);
      }

      .cs-desc {
        opacity: 0.8;
      }
    }
  }
}
